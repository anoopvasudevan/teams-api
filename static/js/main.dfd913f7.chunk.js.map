{"version":3,"sources":["api-lookup/components/Header.jsx","api-lookup/components/Select.jsx","api-lookup/components/DropdownSelector.jsx","api-lookup/components/Query.jsx","api-lookup/components/AllQueries.jsx","api-lookup/hooks/query-state.js","api-lookup/pages/APILookup.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","Select","props","useState","options","loadedOptions","setLoadedOptions","selectOption","setSelectOption","showOptions","setShowOptions","cursor","setCursor","inputRef","useRef","useEffect","document","addEventListener","documentClickedHandler","removeEventListener","e","current","contains","target","optionClickedHandler","option","value","onOptionSelect","type","placeholder","onChange","searchInput","trim","toLowerCase","filter","indexOf","onClick","state","onBlur","onKeyDown","keyCode","length","ref","disabled","inputEnabled","map","index","key","onMouseDown","bind","DropdownSelector","show","title","Query","inputChecked","setInputChecked","query","onSelect","htmlFor","id","checked","AllQueries","queries","queryReducer","action","OPTIONS","QUERIES","APILookup","showTeamSelector","showFeatureSelector","setShowFeatureSelector","readyToSearch","setReadyToSearch","loadedQueries","setLoadedQueries","searchButtonClickedHandler","initialState","reduce","all","useReducer","queryState","dispatch","setQueryState","useCallback","status","useQueryState","selectedQueries","push","teamName","featureName","App","basename","process","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dfd913f7.chunk.js","sourcesContent":["import React from 'react'\n\nimport \"./Header.css\";\n\nconst Header = () => {\n    return (\n        <header className=\"Header\">\n            <h1 className=\"Header__title\">TEAMS API SEARCH</h1>\n        </header>\n    )\n}\n\nexport default Header\n","import React, { useState, useRef, useEffect } from \"react\";\n\nimport \"./Select.css\";\n\nconst Select = (props) => {\n  const [loadedOptions, setLoadedOptions] = useState(props.options);\n  const [selectOption, setSelectOption] = useState(\"Select option\");\n  const [showOptions, setShowOptions] = useState(false);\n  const [cursor, setCursor] = useState(0);\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    document.addEventListener(\"click\", documentClickedHandler);\n    return () => {\n      document.removeEventListener(\"click\", documentClickedHandler);\n    };\n  }, []);\n\n  const documentClickedHandler = (e) => {\n    if (!inputRef.current.contains(e.target)) setShowOptions(false);\n  };\n\n  const inputChangedHandler = (e) => {\n    setShowOptions(true);\n    const searchInput = e.target.value.trim().toLowerCase();\n    setLoadedOptions(\n      props.options.filter(\n        (option) => option.toLowerCase().indexOf(searchInput) !== -1\n      )\n    );\n  };\n\n  const inputClickedHandler = (e) => {\n    // console.log('clicked')\n    setShowOptions((state) => !state);\n  };\n\n  const keyPressHandler = (e) => {\n    // console.log(e.keyCode);\n    if (e.keyCode === 40) {\n      if (cursor < loadedOptions.length - 1) {\n        setCursor((cursor) => cursor + 1);\n      }\n      setShowOptions(true);\n    }\n\n    if (e.keyCode === 38) {\n      if (cursor > 0) {\n        setCursor((cursor) => cursor - 1);\n      }\n      setShowOptions(true);\n    }\n\n    if (e.keyCode === 13) {\n      optionClickedHandler(loadedOptions[cursor]);\n    }\n  };\n\n  const optionClickedHandler = (option) => {\n    // console.log(option)\n    inputRef.current.value = \"\";\n    setSelectOption(option);\n    setLoadedOptions(props.options);\n    setShowOptions(false);\n    setCursor(0);\n    props.onOptionSelect(option);\n  };\n\n  return (\n    <div className=\"SelectContainer\">\n      <div className=\"SelectInput\">\n        <input\n          type=\"text\"\n          placeholder={selectOption}\n          onChange={inputChangedHandler}\n          onClick={inputClickedHandler}\n          // onFocus={(e) => {\n          //   setShowOptions(true);\n          // }}\n          onBlur={() => {\n            setShowOptions(false);\n          }}\n          onKeyDown={keyPressHandler}\n          ref={inputRef}\n          disabled={!props.inputEnabled}\n        />\n        {/* <span></span> */}\n      </div>\n      {showOptions && (\n        <div className=\"SelectOptionsContainer\">\n        <div className=\"SelectOptions\">\n          {loadedOptions.map((option, index) => {\n            return (\n              <div\n                key={index}\n                className={`SelectOptions__option ${\n                  selectOption === option && \"SelectOptions__option_selected\"\n                } ${cursor === index && \"SelectOptions__option_focus\"}`}\n                onMouseDown={optionClickedHandler.bind(null, option)}\n              >\n                {option}\n              </div>\n            );\n          })}\n        </div>\n        </div>\n\n      )}\n      \n    </div>\n    \n  );\n};\n\nexport default Select;\n","import React from \"react\";\n\nimport Select from \"./Select\";\nimport \"./DropdownSelector.css\";\n\nconst DropdownSelector = (props) => {\n  return (\n    <div className=\"DropdownSelector\">\n      <h3 className={`DS__title ${!props.show && \"DS__title_disabled\"}`}>\n        {props.title}\n      </h3>\n      <Select\n        options={props.options}\n        inputEnabled={props.show}\n        onOptionSelect={props.onOptionSelect}\n      />\n    </div>\n  );\n};\n\nexport default DropdownSelector;\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./Query.css\";\n\nconst Query = (props) => {\n  const [inputChecked, setInputChecked] = useState(false);\n\n  const { query, onSelect } = props;\n\n  const inputCheckedHandler = () => {\n    setInputChecked((state) => !state);\n  };\n\n  useEffect(() => {\n    onSelect(query, inputChecked);\n  }, [inputChecked, onSelect, query]);\n\n  return (\n    <>\n      <label\n        className={`Query ${inputChecked && \"Query__checked\"}`}\n        htmlFor={query}\n      >\n        <input\n          id={query}\n          type=\"checkbox\"\n          onChange={inputCheckedHandler}\n          checked={inputChecked}\n        />\n        {query}\n      </label>\n    </>\n  );\n};\n\nexport default Query;\n","import React from \"react\";\n\nimport Query from \"./Query\";\nimport \"./AllQueries.css\";\n\nconst AllQueries = (props) => {\n  const { queries, onSelect } = props;\n\n  if (queries.length === 0) {\n    return (\n      <p className=\"AllQueries__notification\">\n        Please select a team & a feature to search for queries\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"AllQueries\">\n      {queries.map((query, index) => (\n        <div className=\"AllQueries__query\" key={index}>\n          <Query query={query} onSelect={onSelect} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default AllQueries;\n","import { useCallback, useReducer } from \"react\";\n\nconst queryReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return { ...state, [action.query]: action.value };\n    default:\n      return state;\n  }\n};\n\nexport const useQueryState = (queries) => {\n  const initialState = queries.reduce(\n    (all, query) => ({ ...all, [query]: false }),\n    {}\n  );\n\n  const [queryState, dispatch] = useReducer(queryReducer, initialState);\n\n  const setQueryState = useCallback((query, status) => {\n    dispatch({ type: \"CHANGE\", query, value: status });\n  }, []);\n\n  return { queryState, setQueryState };\n};\n","import React, { useState } from \"react\";\n\nimport Header from \"../components/Header\";\nimport DropdownSelector from \"../components/DropdownSelector\";\nimport AllQueries from \"../components/AllQueries\";\nimport { useQueryState } from \"../hooks/query-state\";\nimport \"./APILookup.css\";\n\nconst OPTIONS = [\n  \"LA Lakers\",\n  \"Boston Celtics\",\n  \"Toronto Raptors\",\n  \"Houston Rockets\",\n  \"Golden State Warriors\",\n  \"LA Lakers\",\n  \"Boston Celtics\",\n  \"Toronto Raptors\",\n  \"Houston Rockets\",\n  \"Golden State Warriors\",\n];\n\nconst QUERIES = [\n  \"Query 1\",\n  \"Query 2\",\n  \"Query 3\",\n  \"Query 4\",\n  \"Query 15\",\n  \"Query 21\",\n  \"Query 32\",\n  \"Query 34\",\n  \"Query 45\",\n  \"Query 56\",\n  \"Query 17\",\n  \"Query 28\",\n  \"Query 39\",\n  \"Query 40\",\n  \"Query 25\",\n  \"Query 21\",\n  \"Query 22\",\n  \"Query 23\",\n  \"Query 24\",\n  \"Query 75\",\n  \"Query 71\",\n  \"Query 72\",\n  \"Query 73\",\n  \"Query 74\",\n  \"Query 35\",\n  \"Query 31\",\n  \"Query 32\",\n  \"Query 33\",\n  \"Query 34\",\n  \"Query 45\",\n  \"Query 41\",\n  \"Query 42\",\n  \"Query 43\",\n  \"Query 54\",\n  \"Query 55\",\n  \"Query 51\",\n  \"Query 52\",\n  \"Query 53\",\n  \"Query 94\",\n  \"Query 95\",\n  \"Query 101\",\n  \"Query 102\",\n  \"Query 113\",\n  \"Query 224\",\n  \"Query 335\",\n  \"Query 441\",\n  \"Query 232\",\n  \"Query 123\",\n  \"Query 444\",\n  \"Query 500\",\n];\n\nconst APILookup = () => {\n  const [showTeamSelector, setShowTeamSelector] = useState(true);\n  const [showFeatureSelector, setShowFeatureSelector] = useState(false);\n  const [readyToSearch, setReadyToSearch] = useState(false);\n  const [loadedQueries, setLoadedQueries] = useState([]);\n\n  const teamSelectedHandler = (teamName) => {\n    // console.log(teamName);\n    setShowFeatureSelector(true);\n  };\n\n  const featureSelectedHandler = (featureName) => {\n    // console.log(featureName);\n    setReadyToSearch(true);\n  };\n\n  const searchButtonClickedHandler = () => {\n    setLoadedQueries(QUERIES);\n  };\n\n  // once the queries are loaded set the initial state\n  const { queryState, setQueryState } = useQueryState(QUERIES);\n\n  let selectedQueries = [];\n  for (const key in queryState) {\n    if (queryState[key]) selectedQueries.push(key);\n  }\n\n  // console.log(selectedQueries.length);\n\n  return (\n    <div className=\"APILookup\">\n      <Header />\n      {/* <div className=\"APILookup__selectors_wrapper\"> */}\n      <div className=\"APILookup__selectors_container\">\n        <div className=\"APILookup__selectors\">\n          <div className=\"APILookup__selector\">\n            <DropdownSelector\n              title=\"Team Selector\"\n              show={showTeamSelector}\n              options={OPTIONS}\n              onOptionSelect={teamSelectedHandler}\n            />\n          </div>\n          <div className=\"APILookup__selector\">\n            <DropdownSelector\n              title=\"Feature Selector\"\n              show={showFeatureSelector}\n              options={OPTIONS}\n              onOptionSelect={featureSelectedHandler}\n            />\n          </div>\n          <div className=\"APILookup__search_button\">\n            <button\n              disabled={!readyToSearch}\n              onClick={searchButtonClickedHandler}\n              // tabIndex=\"0\"\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"APILookup__queries\">\n        <div className=\"APILookup__queries_box\">\n          <AllQueries queries={loadedQueries} onSelect={setQueryState} />\n        </div>\n      </div>\n\n      <div className=\"APILookup__submit_button\">\n        <button\n          disabled={!selectedQueries.length}\n          onClick={searchButtonClickedHandler}\n        >\n          SUBMIT\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default APILookup;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport APILookup from \"./api-lookup/pages/APILookup\";\nimport \"./App.css\";\n\nfunction App() {\n  // console.log(process.env.PUBLIC_URL);\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/\" exact>\n          <div className=\"App\">\n            <APILookup />\n          </div>\n        </Route>\n        {/* <Redirect to=\"/\" /> */}\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}